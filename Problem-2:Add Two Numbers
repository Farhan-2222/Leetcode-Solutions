/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int n,n1,n2,val,carry=0;
        ListNode head=new ListNode(0);
        ListNode l3=head;
        while(l1 != null || l2 != null){
            n1=(l1!=null) ? l1.val : 0;
            n2=(l2!=null) ? l2.val : 0;
            n=n1+n2+carry;
            carry=n/10;
            val=n%10;
            ListNode new_node=new ListNode(val);
            l3.next = new_node;
            
            if(l1!=null) l1=l1.next;
            if(l2!=null) l2=l2.next;
            l3=l3.next;
        }
        if(carry>0){
            ListNode new_node=new ListNode(carry);
            l3.next=new_node;
        }
        return head.next;
    }
}
